// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/access/Ownable.sol";

contract MempoolLogger is Ownable {
    struct TransactionLog {
        address from;
        address to;
        uint256 value;
        uint256 timestamp;
    }

    TransactionLog[] public transactionLogs;

    event TransactionLogged(address indexed from, address indexed to, uint256 value, uint256 timestamp);

    function logTransaction(address from, address to, uint256 value) external onlyOwner {
        transactionLogs.push(TransactionLog({
            from: from,
            to: to,
            value: value,
            timestamp: block.timestamp
        }));
        emit TransactionLogged(from, to, value, block.timestamp);
    }

    function getTransactionLogs() external view returns (TransactionLog[] memory) {
        return transactionLogs;
    }
}
